#
# [Boards]
#   list of available boards
#
# <name of board definition section> = <name to be displayed>
#
#
# [<name]
#	board definition section
#
# arch = <processor name> 
#   requires a file named "arch_xxx.py" in src/hardware/arch folder
#
# memory = <size of board memory>
#  depends on addressing capability: variable "addressingSize" in arch file
#
# device = <device to be displayed>
#   as many device definition as required
#   parameters depend on each device module present in src/hardware/device folder
#   each module is loaded on demand when referenced into board definition
#   its name is not related to its .py file name but depends on its declaration when loaded
#   see specific instruction for each module
#

[Boards]
edu1_simple  = Edu1
edu1_8_leds  = Edu1 with 1 "8-led" display
#edu1_2_8_leds = Edu1 with 2 "8-led" displays
#edu1_1_16_leds = Edu1 with 1 "16-led" display
6502_simple = 6502
6502_1_8_leds = 6502 with 1 8-led display

[edu1_simple]
arch = edu1
memory = max

[edu1_8_leds]
arch = edu1
memory = max
# Led Management module
# - "Led display": name of Led management module
# - number of leds (depends on operand size)
# - input address
device = "Led display" 8 50

[edu1_2_8_leds]
arch = edu1
memory = max
device_1 = "Led display" 8 50
device_2 = "Led display" 8 60

[edu1_1_16_leds]
# for testing processing of 16-bit addressing on 8-bit board
arch = edu1
memory = max
device_1 = "Led display" 16 50

[6502_simple]
arch = 6502
memory = max
help = 6502_simple.html

[6502_1_8_leds]
arch = 6502
memory = max
# input: xff00 (65280)
device = "Led display" 8 65280
